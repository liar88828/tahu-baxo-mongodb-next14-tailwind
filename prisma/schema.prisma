// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String  @map("user_id")
  type              String
  provider          String
  providerAccountId String  @map("provider_account_id")
  refresh_token String?
  access_token  String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token      String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique @map("session_token")
  userId       String   @map("user_id")
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model User {
  id            String    @id @default(cuid())
  name          String
  email         String    @unique
  emailVerified Boolean   @default(false)
  image String? @default("https://t4.ftcdn.net/jpg/04/73/25/49/360_F_473254957_bxG9yf4ly7OBO5I0O5KABlN930GwaMQz.jpg")
  accounts      Account[]
  sessions      Session[]
  //
  role          String    @default("USER")
  password      String?
  otp           Int?
  expiresOtp    DateTime?

  @@map("users")
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
  @@map("verificationtokens")
}

model OrderanDB {
  id             String   @id @default(uuid())
  // orang
  dari           String
  pengirim       String
  hpPengirim     String
  penerima       String
  alamatPenerima String
  hpPenerima     String
  // tanggal
  pesan          DateTime
  waktuKirim     DateTime
  // keterangan
  guna           String
  lokasi         String
  // travel
  namaPengiriman String
  ongkir         Int
  // total
  typePembayaran String
  totalBayar     Int
  totalPenjualan Int
  status         String
  // semua
  // at update / create
  created_at     DateTime @default(now())
  updated_at     DateTime @updatedAt

  TransactionDB   TransactionDB? @relation(fields: [transactionDBId], references: [id])
  transactionDBId Int?           @unique
}

model ProductDB {
  id            Int             @id @default(autoincrement())
  nama       String  @unique
  lokasi     String
  jenis      String
  img        String? @default("https://t4.ftcdn.net/jpg/04/73/25/49/360_F_473254957_bxG9yf4ly7OBO5I0O5KABlN930GwaMQz.jpg")
  harga      Int
  jumlah     Int
  keterangan String
  // at update / create
  created_at    DateTime        @default(now())
  updated_at    DateTime        @updatedAt
  TransactionDB TransactionDB[]
}

model DeliveryDB {
  id         Int     @id @default(autoincrement())
  nama       String  @unique
  hp         String
  lokasi     String
  jenis      String
  harga      Int
  img        String? @default("https://t4.ftcdn.net/jpg/04/73/25/49/360_F_473254957_bxG9yf4ly7OBO5I0O5KABlN930GwaMQz.jpg")
  keterangan String
}

model BankDB {
  id         Int     @id @default(autoincrement())
  nama       String  @unique
  hp         String
  no         String
  lokasi     String
  jenis      String
  img        String? @default("https://t4.ftcdn.net/jpg/04/73/25/49/360_F_473254957_bxG9yf4ly7OBO5I0O5KABlN930GwaMQz.jpg")
  keterangan String
}

model TransactionDB {
  id          Int        @id @default(autoincrement())
  ProductDB   ProductDB? @relation(fields: [productDBId], references: [id])
  productDBId Int?
  OrderanDB   OrderanDB?
}
